---
- name: Install and setup required dependencies for Troposphere
  hosts: troposphere
  vars:
    clean_target: CLEAN_TARGET | default(True)

  roles:
    - { role: install-dependencies,
        when: clean_target,
        tags: ['dependencies', 'apt-install', 'install'] }

    - { role: setup-pyenv,
        tags: ['dependencies', 'setup-virtualenv'] }

    - { role: setup-postgres,
        DB_USER: "{{ TROPO_DBUSER | default(troposphere_database_user) }}",
        DB_VERSION: "{{ pg_version }}",
        when: clean_target,
        tags: ['dependencies', 'database'] }

    - { role: tls-cert,
        TLS_COMMON_NAME: "{{ troposphere_server_name }}",
        when: clean_target,
        tags: ['dependencies', 'ssl'] }


- name: Setup virtualenv and clone Troposphere
  hosts: troposphere
  roles:
    - { role: setup-virtualenv,
        VIRTUAL_ENV_NAME: "{{ troposphere_virtualenv_name }}_{{ troposphere_github_branch }}",
        VIRTUAL_ENV_BASE_DIR: "{{ virtualenv_dir }}",
        REINSTALL: "{{ REINSTALL_VENV | default(True) }}",
        tags: [ 'troposphere', 'setup-virtualenv'] }

    - { role: clone-repo,
        REPO_BASE_DIR: "{{ TROPOSPHERE_DIR | default(workspace) }}",
        CLONE_TARGET: "{{ TROPOSPHERE_LOCATION | default(troposphere_directory_path) }}",
        SPECIFIC_BRANCH: "{{ troposphere_github_branch }}",
        REPO_URI: "{{ TROPOSPHERE_REPO | default(troposphere_github_repo) }}",
        tags: [ 'troposphere', 'clone-repo'] }

  tasks:
    - block:
        # Ansible will not create a symlink where a non-empty folder exists,
        # to work around this, you must delete the symlink destination
        # prior.
        # https://github.com/ansible/ansible/issues/7254#issuecomment-327590981
        - file:
            path: "{{ LINK_DEST }}"
            state: absent
        - name: Create link {{ LINK_DEST }} -> {{ LINK_SOURCE }}
          file:
            src: "{{ LINK_SOURCE }}"
            dest: "{{ LINK_DEST }}"
            state: link
      vars:
          LINK_DEST: "{{ troposphere_virtualenv_path }}"
          LINK_SOURCE: "{{ virtualenv_dir }}/{{ troposphere_virtualenv_name }}_{{ troposphere_github_branch }}"
      tags: [ 'troposphere', 'setup-virtualenv']

# Setup Trososphere
- import_playbook: ./setup_troposphere.yml

- name: Enable New Relic agent
  hosts: troposphere
  roles:
     - { role: noc-enable-new-relic,
         TARGET_HOME: "{{ TROPOSPHERE_LOCATION | default(troposphere_directory_path) }}",
         MODULE_NAME: 'troposphere',
         new_relic_browser: True,
         new_relic_app_name: "{{ NEW_RELIC.TROPO_LABEL }}",
         when: NEW_RELIC is defined and NEW_RELIC.TROPO_LABEL | default('') != '' and NEW_RELIC.LICENSE | default('') != '',
         tags: ['troposphere', 'new-relic', 'monitoring'] }

- name: Configure uwsgi
  hosts: troposphere
  roles:
    - { role: configure-uwsgi,
        APP_NAME: 'troposphere',
        APP_ENV_VARS: ["DJANGO_SETTINGS_MODULE=troposphere.settings"],
        APP_MODULE: 'troposphere.wsgi',
        APP_SRC_DIR: "{{ TROPOSPHERE_LOCATION | default(troposphere_directory_path) }}",
        APP_VIRTUAL_ENV_DIR : "{{ VIRTUAL_ENV_TROPOSPHERE | default(troposphere_virtualenv_path) }}",
        APP_WORKER_MAX_CONCURRENT_REQUESTS: 100,
        NUM_PROCESSES: "{{ troposphere_uwsgi_processes | default(16) }}",
        AUTORELOAD: "{{ UWSGI_AUTORELOAD | default(false) }}",
        tags: ['troposphere', 'uwsgi' ] }
