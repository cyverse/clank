atmosphere_ansible_github_repo: https://github.com/CyVerse/atmosphere-ansible.git
atmosphere_ansible_github_branch: master
atmosphere_ansible_directory_name: atmosphere-ansible
atmosphere_ansible_directory_path: "{{workspace}}/{{atmosphere_ansible_directory_name}}"
atmosphere_ansible_inventory_filename: hosts
atmosphere_ansible_group_vars_folder_name: group_vars
atmosphere_ansible_virtualenv_name: atmo
atmosphere_ansible_virtualenv_path: "{{virtualenv_dir}}/{{atmosphere_ansible_virtualenv_name}}"

DEFAULT_MOTD: |

  Welcome to
      _   _                             _
     / \ | |_ _ __ ___   ___  ___ _ __ | |__   ___ _ __ ___
    / _ \| __| '_ ` _ \ / _ \/ __| '_ \| '_ \ / _ \ '__/ _ \
   / ___ \ |_| | | | | | (_) \__ \ |_) | | | |  __/ | |  __/
  /_/   \_\__|_| |_| |_|\___/|___/ .__/|_| |_|\___|_|  \___|
                                 |_|
ATMOSPHERE_ANSIBLE_DIR: "{{ atmosphere_ansible_directory_path }}"

ATMOSPHERE_ANSIBLE_CONFIG:
    ANSIBLE_LOG_DIR: "{{ atmosphere_directory_path }}/logs"
    ANSIBLE_FACT_CACHE_BACKEND: redis
    ANSIBLE_FACT_CACHE_TIMEOUT: 14400
    ANSIBLE_MANAGED_STR: "Ansible managed: {file} modified on %Y-%m-%d %H:%M:%S by {uid} on {host}"
    ANSIBLE_SSH_TIMEOUT: 10
    SUBSPACE_PLUGINS_DIR: "{{ atmosphere_virtualenv_path }}/lib/python2.7/site-packages/subspace/plugins"
    SUBSPACE_CALLBACK_WHITELIST: play_logger
    SUBSPACE_COW_SELECTION: random
    SUBSPACE_NO_COWS: 1

ATMOSPHERE_ANSIBLE_GROUP_VARS_ALL_CONTENT: |

    # If true, install a DHCP script that pings external services to establish
    # guest IP
    ADD_EXTERNAL_IP_RESOLUTION_ATTEMPTS: true

    # List of unmounts to perform
    ADDITIONAL_UNMOUNTS:
        - { name: "/mnt", source: "/dev/vdb", fstype: "ext3" }

    # Add specified users to specified group in /etc/groups
    ADD_TO_GROUP:
      GROUP: users
      LIST_OF_USERS:
        - '{{ "{{" }} ATMOUSERNAME {{ "}}" }}'

    # This variable is the default gid of the atmosphere user
    ATMO_USER_GROUP: "users"

    # Additional groups that will have sudo access
    EXTRA_SUDOER_GROUPS: []

    # Used to determie if EZ scripts should be installed.
    EZ_INSTALL_DIR: '/home'

    # After this many seconds, fail2ban will forget the number of failed attempts
    FAIL2BAN_FINDTIME: '30'

    # Number of incorrect attempts for being banned
    FAIL2BAN_MAX_RETRY: '5'

    # Guacamole vnc server that proxies connections to user vms
    # GUACAMOLE_SERVER_IP: <ip addr>

    MOTD: |
        {{ MOTD | default(DEFAULT_MOTD) | indent(4) }}

    REALVNC_SERVER_PERMISSIONS: root:f,:f
    SET_DESKTOP_BACKGROUND: true

    # TODO: HOW DOES THIS RELATE TO SETUP_DHCP
    SET_NTP_SERVERS: false

    # If true, a deployment script is installed to allow a user to backup their
    # home dir with IRODS
    SETUP_ATMO_BACKUP: false

    # Install DHCP client
    SETUP_DHCP_CLIENT: true

    # Setup globus connect - a file sharing/transfer service
    # https://www.globus.org/globus-connect
    SETUP_GLOBUS_CONNECT: false

    # Enable guacamole vnc client
    SETUP_GUACAMOLE: "{{ GUACAMOLE_ENABLED }}"

    # Install a web browser on instance
    SETUP_GUI_BROWSER: true

    # Install  iRODS iCommands and iRODS FUSE client                     |
    SETUP_IRODS_ICOMMANDS: false

    SETUP_LDAP: true
    # False on all j7m

    # If true, setup user home directory, (this is overriden to true when ldap is not setup)
    SETUP_LOCAL_USER_ACCOUNT: true

    # If true, enable novnc client access on vm. Requires vnc proxy server.
    SETUP_NOVNC: false

    # Enable vnc
    SETUP_REALVNC_SERVER: true

    # Add lines to users bashrc
    SETUP_USER_BASHRC_LINES: []

    # A user must be in one of these groups to have ssh access  (space delimited
    # string)
    SSH_ALLOW_GROUPS: "users root"

    # A list of public keys to inject into the instance, should include atmosphere
    # deploy key
    SSHKEYS: []

    # A list of public keys to exclude
    SSH_KEYS_TO_REMOVE: []
