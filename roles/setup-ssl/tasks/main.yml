# tasks to install LDAP
- name: gather os specific variables
  include_vars: "{{ item }}"
  with_first_found:
    - "{{ ansible_distribution }}-{{ ansible_distribution_major_version }}.yml"
    - "{{ ansible_distribution }}.yml"
    - "{{ ansible_os_family }}.yml"
    - "default.yml"
  tags: vars

- name: debug create ssl
  debug: msg="CREATE_SSL_FILES={{ CREATE_SSL_FILES }}"

########################################
# Tasks related to ssl certs being given
########################################
- block:

  - include: check_parameters.yml

  - name: copy over ssl certificate
    copy: src={{ SSL_CERTIFICATE }} dest={{ SSL_LOCATION }}/certs/

  - name: copy over bundle cert
    copy: src={{ BUNDLE_CERT }} dest={{ SSL_LOCATION }}/certs/

  - name: copy over private ssl key
    copy: src={{ SSL_KEY }} dest={{ SSL_LOCATION }}/private/

  when: not CREATE_SSL_FILES

########################################
# Tasks related to ssl certs not given
########################################
- block:

  - name: Creating self-signed server SSL cert
    command: >
      openssl req -new
        -x509
        -nodes
        -extensions v3_ca
        -days {{ item.days|default(3650) }}
        -subj "/C={{ item.country|default('') }}/ST={{ item.state|default('') }}/L={{ item.city|default('') }}/O={{ item.organization|default('') }}/OU={{ item.unit|default('') }}{% if item.domains is defined %}{% for domain in item.domains %}/CN={{ domain }}{% endfor %}{% else %}/CN={{ item.name }}{% endif %}/emailAddress={{ item.email|default('') }}"
        -keyout {{ SSL_LOCATION }}/private/{{ item.name }}.key
        -out {{ SSL_LOCATION }}/certs/{{ item.name }}.crt
    args:
      creates: "{{ SSL_CERTIFICATE }}/certs/{{ item.name }}.crt"
    with_items: "{{ OPENSSL_SELF_SIGNED }}"

  - name: Copy over empty bundle file
    file: path={{ SSL_LOCATION }}/certs/empty_bundle.crt state=touch

  when: CREATE_SSL_FILES
